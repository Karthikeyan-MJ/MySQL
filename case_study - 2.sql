use Supply_chain;

--------------------------------
-- Section A --> Know your data    
--------------------------------
-- 1.	Read the data from all tables.
select * from customer;
select * from Orders;
select * from Supplier;
select * from Product;
select * from OrderItem;

-- 2.	Find the country wise count of customers.
select count(*) as no_of_customers,country 
from customer
group by country;

-- 3.	Display the products which are not discontinued.
select * from product
where IsDiscontinued = 0;

-- 4.	Display the list of companies along with the product name that they are supplying.
select s.companyname, p.productname 
from product p 
join supplier s on p.supplierid = s.id;

-- 5.	Display customer's information who stays in 'Mexico'
select * from customer
 where Country='Mexico';

-- 6.	Display the costliest item that is ordered by the customer.
select distinct c1.id as customerid,c1.firstname,oi1.productid,oi1.unitprice,p.productname from orderitem oi1
join orders o1 on o1.id = oi1.orderid
join customer c1 on c1.id = o1.customerid
join product p on oi1.productid = p.id
where oi1.unitprice = (select max(unitprice) from orderitem oi
join orders o on o.id = oi.orderid
join customer c on c.id = o.customerid
where c.id = c1.id
group by c.id);

-- 7.	Display supplier id who owns highest number of products.
select s.id as supplierid,s.companyname, count(p.productname) as no_of_products 
from product p 
join supplier s on p.supplierid = s.id
group by s.id,s.companyname
order by no_of_products desc
limit 1;

-- 8.	Display month wise and year wise count of the orders placed.
select year(orderdate) as year,count(*) as no_of_orders
from orders
group by year(orderdate);

select month(orderdate) as month,year(orderdate) as year,count(*) as no_of_orders
from orders
group by month(orderdate),year(orderdate);


-- 9.	Which country has maximum suppliers.
select country,count(*) as suppliers from supplier
group by country
order by count(*) desc
limit 1;

-- 10.	Which customers did not place any order.
select id,firstname,LastName 
from customer where id not in 
(select distinct customerid from orders);


---------------------------------
-- Section - B
---------------------------------
-- 1.	Arrange the product id, product name based on high demand by the customer.
select productid,productname,count(*) as quantity_sold
from orderitem o 
join  product p on p.id = o.ProductId
group by productid,productname
order by count(*)  desc;

-- 2.	Display the number of orders delivered every year.
select year(orderdate) as year,count(*) as no_of_orders
from orders
group by year(orderdate);

-- 3.	Calculate year-wise total revenue.
select year(orderdate) as year,count(*) as no_of_orders,sum(TotalAmount) as TotalRevenue
from orders
group by year(orderdate);

-- 4.	Display the customer details whose order amount is maximum including his past orders.
select o.CustomerId,c.FirstName,c.LastName,sum(o.TotalAmount) as total_order_amount
from orders o 
join customer c on c.id = o.CustomerId
group by o.CustomerId,c.FirstName,c.LastName
order by total_order_amount desc
limit 1;

-- 5.	Display total amount ordered by each customer from high to low.
select o.CustomerId,c.FirstName,c.LastName,sum(o.TotalAmount) as total_order_amount
from orders o 
join customer c on c.id = o.CustomerId
group by o.CustomerId,c.FirstName,c.LastName
order by total_order_amount desc;


-- 8.	Find out top 3 suppliers in terms of revenue generated by their products.
select s.id as supplierid,s.CompanyName,sum(o.unitprice*quantity) as revenue 
from orderitem o
join product p on p.id = o.ProductId
join supplier s on p.SupplierId = s.id
group by s.id,s.CompanyName
order by revenue desc
limit 3;

-- 9.	Display latest order date (should not be same as first order date) of all the customers with customer details.
select o.CustomerId,c.firstname,c.LastName, max(o.orderdate) 
from orders o 
join customer c on o.CustomerId = c.id
group by o.CustomerId,c.firstname,c.LastName
having count(o.orderdate) >1;

-- 10.	Display the product name and supplier name for each order
select o.OrderId,o.ProductId,p.ProductName,s.CompanyName 
from orderitem o 
join product p on p.id = o.ProductId
join supplier s on s.id = p.SupplierId
order by o.OrderId;


-------------------------------
-- Section - C 
-------------------------------
-- 1.	Fetch the records to display the customer details who ordered more than 10 products in the single order
select oi.orderid,c.id,c.FirstName,c.LastName,sum(oi.quantity) 
from orderitem oi 
join orders o on o.id = oi.orderid
join customer c on c.id = o.CustomerId
group by oi.orderid
having sum(oi.quantity)>10;

-- 2.	Display all the product details with the ordered quantity size as 1.
select oi.ProductId,p.ProductName,sum(oi.quantity) 
from orderitem oi 
join product p on p.Id = oi.ProductId
group by oi.ProductId,p.ProductName
having sum(oi.quantity)>1;

-- 3.	Display the compan(y)ies which supplies products whose cost is above 100.
select p.ProductName,p.UnitPrice,s.CompanyName from product p
join supplier s on s.id = p.SupplierId 
where p.UnitPrice > 100;

-- 4. Create a combined list to display customers and supplier list as per the below format.`
select 'Customer' as Type,concat(firstname,' ',LastName) as ContactName, City,Country,Phone from customer union all 
select 'Supplier' as Type,ContactName, City,Country,Phone from supplier;

-- 5.	Display the customer list who belongs to same city and country arrange in country wise.
select * from customer
order by country,city;


----------------------------------
-- Section - D
----------------------------------
-- 1.	Company sells the product at different discounted rates. Refer actual product price in product table and selling price in the order item table. Write a query to find out total amount saved in each order then display the orders from highest to lowest amount saved. 
select oi.OrderId,sum(p.UnitPrice*oi.quantity-oi.UnitPrice*oi.quantity) as AmountSaved from orderitem oi
join product p 
on p.id = oi.productid
where p.UnitPrice != oi.UnitPrice
group by orderid
order by AmountSaved desc;

-- 2.	Mr. Kavin want to become a supplier. He got the database of "Richard's Supply" for reference. Help him to pick: 
-- a. List few products that he should choose based on demand.
select p.ProductName,sum(oi.Quantity) as SoldItems from product p 
join orderitem oi
on oi.ProductId = p.id
group by p.ProductName
order by SoldItems desc
limit 5;

-- b. Who will be the competitors for him for the products suggested in above questions.
select s.companyname,p.ProductName,sum(oi.Quantity) as SoldItems 
from product p 
join orderitem oi on oi.ProductId = p.id
join supplier s on s.id = p.SupplierId
group by s.companyname,p.ProductName
order by SoldItems desc
limit 5;


-- 3.	Create a combined list to display customers and suppliers details considering the following criteria 
-- •	Both customer and supplier belong to the same country
-- •	Customer who does not have supplier in their country
-- •	Supplier who does not have customer in their country
select companyname, supplier.Country, firstname, customer.Country from customer
join supplier on supplier.Country = customer.Country
order by customer.Country;

select companyname, country from supplier where country not in (select distinct country from customer);

select concat(firstname, ' ' , lastname), country from customer
where country not in (select distinct country from supplier);

select distinct country from customer where country not in (select distinct country from supplier);

-- 4.	Every supplier supplies specific products to the customers. Create a view of suppliers and total sales made by their products and write a query on this view to find out top 2 suppliers (using windows function RANK() in each country by total sales done by the products.
select supplier.id, companyname, supplier.country, orderitem.productid,
sum(orderitem.quantity) as total_sales from orderitem
join product on orderitem.productid = product.id
join supplier on product.SupplierId = supplier.id
group by ProductId;

-- 5.	Find out for which products, UK is dependent on other countries for the supply. List the countries which are supplying these products in the same list.
select distinct orderitem.productid, productname, supplier.country, SupplierId 
from customer
join orders on customer.id = orders.CustomerId
join orderitem on orders.Id = orderitem.OrderId
join product on orderitem.ProductId = product.id
join supplier on product.SupplierId = supplier.id
where customer.country like '%UK%' and supplier.country not like '%UK%'
order by orderitem.ProductId;

select p.*,s.country from product p
join supplier s 
on s.id = p.supplierid
where country != 'UK';